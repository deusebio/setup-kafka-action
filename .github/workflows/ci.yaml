# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  workflow_call:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install yamllint
        run: python3 -m pip install yamllint
      - name: YAML Lint
        run:  |
          yamllint -d "{extends: relaxed, rules: {line-length: {max: 250}}}" \
            --no-warnings action.yaml

  python-tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    name: Python Integration Tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: setup-kafka-action

      - name: Install tox
        run: python3 -m pip install tox

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.10"
          architecture: x64

      - name: Setup Kafka
        id: kafka
        uses: ./setup-kafka-action
        with:
          zookeeper-units: 1
          broker-units: 1

      - name: Integration tests
        shell: bash
        run: |
          cd setup-kafka-action/python
          tox -e tests

  tests:
    strategy:
      fail-fast: false
      matrix:
        encryption:
          - true
          - false
        substrate:
          - lxd
          - microk8s
        case:
          - name: "small"
            brokers: 1
            zk_servers: 1
          - name: "large"
            brokers: 3
            zk_servers: 3
    name: ${{ matrix.case.name }}_${{ matrix.substrate }}_${{ matrix.encryption }}
    needs:
      - lint
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: setup-kafka-action

      - name: Setup Kafka
        id: kafka
        uses: ./setup-kafka-action
        with:
          zookeeper-units: ${{ matrix.case.zk_servers }}
          broker-units: ${{ matrix.case.brokers }}
          encryption: ${{ matrix.encryption }}
          substrate: ${{ matrix.substrate }}

      - name: Show Juju status
        run: |
          juju status

      - name: Check metadata
        run: |
          echo "Endpoint: ${{ steps.kafka.outputs.bootstrap-server }}"
          echo "Username: ${{ steps.kafka.outputs.username }}"
          echo "Password: ${{ steps.kafka.outputs.password }}"
          echo "CA: ${{ steps.kafka.outputs.ca-certificate }}"
          
          IFS=',' read -ra SERVERS  <<< "${{ steps.kafka.outputs.bootstrap-server }}"
          
          echo "Servers: â…›{SERVERS}"
          if [ ${#SERVERS[@]} != ${{ matrix.case.brokers }} ]
          then
            exit 1
          fi